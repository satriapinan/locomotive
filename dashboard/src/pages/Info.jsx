import React from 'react';
import { Container, Typography, Grid, Paper, List, ListItem, ListItemText } from '@mui/material';
import {createTheme, ThemeProvider} from "@mui/material/styles";
import NavBar from "../components/NavBar.jsx";

const theme = createTheme({
    typography: {
        fontFamily: [
            'Poppins',
            'sans-serif',
        ].join(','),
    },
    palette: {
        text: {
            primary: '#2F2F2F',
        },
    },
});

const Info = () => {
    const paperStyle = {
        padding: '1rem',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        boxShadow: '0px 0px 2px rgba(0, 0, 0, 0.2)',
        '&:hover': {
            backgroundColor: '#FEFEFE'
        },
    };

    return (
        <ThemeProvider theme={theme}>
            <NavBar />
            <Container maxWidth="lg" sx={{ marginY: '2rem', color: '#2F2F2F' }}>
                <Typography variant="h5"  fontWeight={600} gutterBottom>
                    Locomotive Information Management Platform
                </Typography>
                <Typography variant="body2" fontWeight={300} gutterBottom>
                    This is a web platform designed for locomotive information management. It employs NodeJS (Express), Java Spring,
                    Kafka, MongoDB, and MySQL/Postgres, integrating various components for different tasks.
                </Typography>

                <Typography variant="h6" fontWeight={600} gutterBottom sx={{ marginTop: '2rem' }}>
                    Component Overview
                </Typography>
                <Grid container spacing={2}>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '3rem' }}>
                            <Typography variant="subtitle2">
                                NodeJS (Express)
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Builds APIs to save/read data to/from Kafka and store it in MongoDB.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '3rem' }}>
                            <Typography variant="subtitle2">
                                Java Spring
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Generates dummy locomotive details data every 10s and saves it to Kafka.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '3rem' }}>
                            <Typography variant="subtitle2">
                                Kafka (Message Broker)
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Acts as a broker to store and retrieve data.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '3rem' }}>
                            <Typography variant="subtitle2">
                                MongoDB (NoSQL)
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Stores data from Kafka.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '3rem' }}>
                            <Typography variant="subtitle2">
                                MySQL/Postgres
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Stores summary data generated by the Scheduler Report.
                            </Typography>
                        </Paper>
                    </Grid>
                </Grid>

                <Typography variant="h6" fontWeight={600} gutterBottom sx={{ marginTop: '2rem' }}>
                    Key Features
                </Typography>
                <Grid container spacing={2}>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '4rem' }}>
                            <Typography variant="subtitle2">
                                Create Scheduler Info
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                The Java Spring Scheduler regularly generates dummy data about locomotive information and stores it in Kafka.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '4rem' }}>
                            <Typography variant="subtitle2">
                                Create API NodeJS
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Reads data from Kafka, saving it to MongoDB.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '4rem' }}>
                            <Typography variant="subtitle2">
                                Create Scheduler Report
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Fetches data from MongoDB, creates locomotive info summaries, saves them in MySQL/Postgres, and sends summary reports to Telegram.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '4rem' }}>
                            <Typography variant="subtitle2">
                                Create Front End Dashboard
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Utilizes React Js + Vite to display locomotive information in an interactive dashboard format.
                            </Typography>
                        </Paper>
                    </Grid>
                </Grid>

                <Typography variant="h6" fontWeight={600} gutterBottom sx={{ marginTop: '2rem' }}>
                    Primary Functions
                </Typography>
                <Grid container spacing={2}>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '5rem' }}>
                            <Typography variant="subtitle2">
                                Data Monitoring and Management
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                The platform allows monitoring and managing locomotive-related data, from dummy data creation and storage to summary creation and visualization in the dashboard.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '5rem' }}>
                            <Typography variant="subtitle2">
                                Component Communication
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                Leveraging Kafka as a message broker, the platform communicates data across different components.
                            </Typography>
                        </Paper>
                    </Grid>
                    <Grid item sm={12} md={6}>
                        <Paper sx={{ ...paperStyle, minHeight: '5rem' }}>
                            <Typography variant="subtitle2">
                                User Interaction
                            </Typography>
                            <Typography variant="body2" fontWeight={300}>
                                The dashboard built with React allows users to see details about locomotives in a user-friendly and interactive way.
                            </Typography>
                        </Paper>
                    </Grid>
                </Grid>
            </Container>
        </ThemeProvider>
    );
};

export default Info;
